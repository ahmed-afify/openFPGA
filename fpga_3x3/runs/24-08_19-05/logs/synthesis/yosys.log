
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+2406 (git sha1 347dd01, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /openLANE_flow/designs/fpga_3x3/src/arch_encoder.v
Parsing Verilog input from `/openLANE_flow/designs/fpga_3x3/src/arch_encoder.v' to AST representation.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /openLANE_flow/designs/fpga_3x3/src/cbx_1_0.v
Parsing Verilog input from `/openLANE_flow/designs/fpga_3x3/src/cbx_1_0.v' to AST representation.
Generating RTLIL representation for module `\cbx_1__0_'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /openLANE_flow/designs/fpga_3x3/src/cbx_1_1.v
Parsing Verilog input from `/openLANE_flow/designs/fpga_3x3/src/cbx_1_1.v' to AST representation.
Generating RTLIL representation for module `\cbx_1__1_'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /openLANE_flow/designs/fpga_3x3/src/cbx_1_3.v
Parsing Verilog input from `/openLANE_flow/designs/fpga_3x3/src/cbx_1_3.v' to AST representation.
Generating RTLIL representation for module `\cbx_1__3_'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /openLANE_flow/designs/fpga_3x3/src/cby_0_1.v
Parsing Verilog input from `/openLANE_flow/designs/fpga_3x3/src/cby_0_1.v' to AST representation.
Generating RTLIL representation for module `\cby_0__1_'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /openLANE_flow/designs/fpga_3x3/src/cby_1_1.v
Parsing Verilog input from `/openLANE_flow/designs/fpga_3x3/src/cby_1_1.v' to AST representation.
Generating RTLIL representation for module `\cby_1__1_'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: /openLANE_flow/designs/fpga_3x3/src/cby_3_1.v
Parsing Verilog input from `/openLANE_flow/designs/fpga_3x3/src/cby_3_1.v' to AST representation.
Generating RTLIL representation for module `\cby_3__1_'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: /openLANE_flow/designs/fpga_3x3/src/clb.v
Parsing Verilog input from `/openLANE_flow/designs/fpga_3x3/src/clb.v' to AST representation.
Generating RTLIL representation for module `\grid_clb'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: /openLANE_flow/designs/fpga_3x3/src/fpga_defines.v
Parsing Verilog input from `/openLANE_flow/designs/fpga_3x3/src/fpga_defines.v' to AST representation.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: /openLANE_flow/designs/fpga_3x3/src/inv_buf_passgate.v
Parsing Verilog input from `/openLANE_flow/designs/fpga_3x3/src/inv_buf_passgate.v' to AST representation.
Warning: Yosys has only limited support for tri-state logic at the moment. (/openLANE_flow/designs/fpga_3x3/src/inv_buf_passgate.v:59)
/openLANE_flow/designs/fpga_3x3/src/inv_buf_passgate.v:78: ERROR: syntax error, unexpected TOK_END
